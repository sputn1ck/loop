// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: hyperloop.proto

// We can't change this to swapserverrpc, it would be a breaking change because
// the package name is also contained in the HTTP URIs and old clients would
// call the wrong endpoints. Luckily with the go_package option we can have
// different golang and RPC package names to fix protobuf namespace conflicts.

package swapserverrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HyperloopNotificationStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HyperloopId []byte `protobuf:"bytes,1,opt,name=hyperloop_id,json=hyperloopId,proto3" json:"hyperloop_id,omitempty"`
}

func (x *HyperloopNotificationStreamRequest) Reset() {
	*x = HyperloopNotificationStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperloopNotificationStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperloopNotificationStreamRequest) ProtoMessage() {}

func (x *HyperloopNotificationStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperloopNotificationStreamRequest.ProtoReflect.Descriptor instead.
func (*HyperloopNotificationStreamRequest) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{0}
}

func (x *HyperloopNotificationStreamRequest) GetHyperloopId() []byte {
	if x != nil {
		return x.HyperloopId
	}
	return nil
}

type HyperloopNotificationStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participants         []*HyperLoopParticipant `protobuf:"bytes,1,rep,name=participants,proto3" json:"participants,omitempty"`
	HyperloopTxid        string                  `protobuf:"bytes,2,opt,name=hyperloop_txid,json=hyperloopTxid,proto3" json:"hyperloop_txid,omitempty"`
	HtlcNonces           [][]byte                `protobuf:"bytes,3,rep,name=htlc_nonces,json=htlcNonces,proto3" json:"htlc_nonces,omitempty"`
	FinalHtlcSig         []byte                  `protobuf:"bytes,4,opt,name=final_htlc_sig,json=finalHtlcSig,proto3" json:"final_htlc_sig,omitempty"`
	SweeplessSweepNonces [][]byte                `protobuf:"bytes,5,rep,name=sweepless_sweep_nonces,json=sweeplessSweepNonces,proto3" json:"sweepless_sweep_nonces,omitempty"`
}

func (x *HyperloopNotificationStreamResponse) Reset() {
	*x = HyperloopNotificationStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperloopNotificationStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperloopNotificationStreamResponse) ProtoMessage() {}

func (x *HyperloopNotificationStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperloopNotificationStreamResponse.ProtoReflect.Descriptor instead.
func (*HyperloopNotificationStreamResponse) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{1}
}

func (x *HyperloopNotificationStreamResponse) GetParticipants() []*HyperLoopParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *HyperloopNotificationStreamResponse) GetHyperloopTxid() string {
	if x != nil {
		return x.HyperloopTxid
	}
	return ""
}

func (x *HyperloopNotificationStreamResponse) GetHtlcNonces() [][]byte {
	if x != nil {
		return x.HtlcNonces
	}
	return nil
}

func (x *HyperloopNotificationStreamResponse) GetFinalHtlcSig() []byte {
	if x != nil {
		return x.FinalHtlcSig
	}
	return nil
}

func (x *HyperloopNotificationStreamResponse) GetSweeplessSweepNonces() [][]byte {
	if x != nil {
		return x.SweeplessSweepNonces
	}
	return nil
}

type HyperloopReadyForSig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HyperloopReadyForSig) Reset() {
	*x = HyperloopReadyForSig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperloopReadyForSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperloopReadyForSig) ProtoMessage() {}

func (x *HyperloopReadyForSig) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperloopReadyForSig.ProtoReflect.Descriptor instead.
func (*HyperloopReadyForSig) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{2}
}

type HyperLoopParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantKey []byte `protobuf:"bytes,1,opt,name=participant_key,json=participantKey,proto3" json:"participant_key,omitempty"`
	SwapHash       []byte `protobuf:"bytes,2,opt,name=swap_hash,json=swapHash,proto3" json:"swap_hash,omitempty"`
	Amt            int64  `protobuf:"varint,3,opt,name=amt,proto3" json:"amt,omitempty"`
	SweepAddr      string `protobuf:"bytes,4,opt,name=sweep_addr,json=sweepAddr,proto3" json:"sweep_addr,omitempty"`
}

func (x *HyperLoopParticipant) Reset() {
	*x = HyperLoopParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperLoopParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperLoopParticipant) ProtoMessage() {}

func (x *HyperLoopParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperLoopParticipant.ProtoReflect.Descriptor instead.
func (*HyperLoopParticipant) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{3}
}

func (x *HyperLoopParticipant) GetParticipantKey() []byte {
	if x != nil {
		return x.ParticipantKey
	}
	return nil
}

func (x *HyperLoopParticipant) GetSwapHash() []byte {
	if x != nil {
		return x.SwapHash
	}
	return nil
}

func (x *HyperLoopParticipant) GetAmt() int64 {
	if x != nil {
		return x.Amt
	}
	return 0
}

func (x *HyperLoopParticipant) GetSweepAddr() string {
	if x != nil {
		return x.SweepAddr
	}
	return ""
}

type RegisterHyperloopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverKey                 []byte `protobuf:"bytes,1,opt,name=receiver_key,json=receiverKey,proto3" json:"receiver_key,omitempty"`
	SwapHash                    []byte `protobuf:"bytes,2,opt,name=swap_hash,json=swapHash,proto3" json:"swap_hash,omitempty"`
	Amt                         int64  `protobuf:"varint,3,opt,name=amt,proto3" json:"amt,omitempty"`
	PrivateHyperloopId          []byte `protobuf:"bytes,4,opt,name=private_hyperloop_id,json=privateHyperloopId,proto3" json:"private_hyperloop_id,omitempty"`
	PrivateHyperloopPublishTime int64  `protobuf:"varint,5,opt,name=private_hyperloop_publish_time,json=privateHyperloopPublishTime,proto3" json:"private_hyperloop_publish_time,omitempty"`
	SweepAddr                   string `protobuf:"bytes,6,opt,name=sweep_addr,json=sweepAddr,proto3" json:"sweep_addr,omitempty"`
}

func (x *RegisterHyperloopRequest) Reset() {
	*x = RegisterHyperloopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterHyperloopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterHyperloopRequest) ProtoMessage() {}

func (x *RegisterHyperloopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterHyperloopRequest.ProtoReflect.Descriptor instead.
func (*RegisterHyperloopRequest) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterHyperloopRequest) GetReceiverKey() []byte {
	if x != nil {
		return x.ReceiverKey
	}
	return nil
}

func (x *RegisterHyperloopRequest) GetSwapHash() []byte {
	if x != nil {
		return x.SwapHash
	}
	return nil
}

func (x *RegisterHyperloopRequest) GetAmt() int64 {
	if x != nil {
		return x.Amt
	}
	return 0
}

func (x *RegisterHyperloopRequest) GetPrivateHyperloopId() []byte {
	if x != nil {
		return x.PrivateHyperloopId
	}
	return nil
}

func (x *RegisterHyperloopRequest) GetPrivateHyperloopPublishTime() int64 {
	if x != nil {
		return x.PrivateHyperloopPublishTime
	}
	return 0
}

func (x *RegisterHyperloopRequest) GetSweepAddr() string {
	if x != nil {
		return x.SweepAddr
	}
	return ""
}

type RegisterHyperloopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HyperloopId     []byte `protobuf:"bytes,1,opt,name=hyperloop_id,json=hyperloopId,proto3" json:"hyperloop_id,omitempty"`
	ServerKey       []byte `protobuf:"bytes,2,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	HtlcExpiry      int32  `protobuf:"varint,3,opt,name=htlc_expiry,json=htlcExpiry,proto3" json:"htlc_expiry,omitempty"`
	HyperloopExpiry int32  `protobuf:"varint,4,opt,name=hyperloop_expiry,json=hyperloopExpiry,proto3" json:"hyperloop_expiry,omitempty"`
	HyperloopFee    int64  `protobuf:"varint,5,opt,name=hyperloop_fee,json=hyperloopFee,proto3" json:"hyperloop_fee,omitempty"`
	Invoice         string `protobuf:"bytes,6,opt,name=invoice,proto3" json:"invoice,omitempty"`
}

func (x *RegisterHyperloopResponse) Reset() {
	*x = RegisterHyperloopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterHyperloopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterHyperloopResponse) ProtoMessage() {}

func (x *RegisterHyperloopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterHyperloopResponse.ProtoReflect.Descriptor instead.
func (*RegisterHyperloopResponse) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterHyperloopResponse) GetHyperloopId() []byte {
	if x != nil {
		return x.HyperloopId
	}
	return nil
}

func (x *RegisterHyperloopResponse) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

func (x *RegisterHyperloopResponse) GetHtlcExpiry() int32 {
	if x != nil {
		return x.HtlcExpiry
	}
	return 0
}

func (x *RegisterHyperloopResponse) GetHyperloopExpiry() int32 {
	if x != nil {
		return x.HyperloopExpiry
	}
	return 0
}

func (x *RegisterHyperloopResponse) GetHyperloopFee() int64 {
	if x != nil {
		return x.HyperloopFee
	}
	return 0
}

func (x *RegisterHyperloopResponse) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

type PushHyperloopHtlcNonceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HyperloopId []byte `protobuf:"bytes,1,opt,name=hyperloop_id,json=hyperloopId,proto3" json:"hyperloop_id,omitempty"`
	SwapHash    []byte `protobuf:"bytes,2,opt,name=swap_hash,json=swapHash,proto3" json:"swap_hash,omitempty"`
	HtlcNonce   []byte `protobuf:"bytes,3,opt,name=htlc_nonce,json=htlcNonce,proto3" json:"htlc_nonce,omitempty"`
}

func (x *PushHyperloopHtlcNonceRequest) Reset() {
	*x = PushHyperloopHtlcNonceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopHtlcNonceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopHtlcNonceRequest) ProtoMessage() {}

func (x *PushHyperloopHtlcNonceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopHtlcNonceRequest.ProtoReflect.Descriptor instead.
func (*PushHyperloopHtlcNonceRequest) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{6}
}

func (x *PushHyperloopHtlcNonceRequest) GetHyperloopId() []byte {
	if x != nil {
		return x.HyperloopId
	}
	return nil
}

func (x *PushHyperloopHtlcNonceRequest) GetSwapHash() []byte {
	if x != nil {
		return x.SwapHash
	}
	return nil
}

func (x *PushHyperloopHtlcNonceRequest) GetHtlcNonce() []byte {
	if x != nil {
		return x.HtlcNonce
	}
	return nil
}

type PushHyperloopHtlcNonceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerHtlcNonce []byte `protobuf:"bytes,1,opt,name=server_htlc_nonce,json=serverHtlcNonce,proto3" json:"server_htlc_nonce,omitempty"`
	HtlcFeeRate     int64  `protobuf:"varint,2,opt,name=htlc_fee_rate,json=htlcFeeRate,proto3" json:"htlc_fee_rate,omitempty"`
}

func (x *PushHyperloopHtlcNonceResponse) Reset() {
	*x = PushHyperloopHtlcNonceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopHtlcNonceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopHtlcNonceResponse) ProtoMessage() {}

func (x *PushHyperloopHtlcNonceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopHtlcNonceResponse.ProtoReflect.Descriptor instead.
func (*PushHyperloopHtlcNonceResponse) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{7}
}

func (x *PushHyperloopHtlcNonceResponse) GetServerHtlcNonce() []byte {
	if x != nil {
		return x.ServerHtlcNonce
	}
	return nil
}

func (x *PushHyperloopHtlcNonceResponse) GetHtlcFeeRate() int64 {
	if x != nil {
		return x.HtlcFeeRate
	}
	return 0
}

type PushHyperloopHtlcSigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HyperloopId []byte `protobuf:"bytes,1,opt,name=hyperloop_id,json=hyperloopId,proto3" json:"hyperloop_id,omitempty"`
	SwapHash    []byte `protobuf:"bytes,2,opt,name=swap_hash,json=swapHash,proto3" json:"swap_hash,omitempty"`
	HtlcSig     []byte `protobuf:"bytes,3,opt,name=htlc_sig,json=htlcSig,proto3" json:"htlc_sig,omitempty"`
}

func (x *PushHyperloopHtlcSigRequest) Reset() {
	*x = PushHyperloopHtlcSigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopHtlcSigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopHtlcSigRequest) ProtoMessage() {}

func (x *PushHyperloopHtlcSigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopHtlcSigRequest.ProtoReflect.Descriptor instead.
func (*PushHyperloopHtlcSigRequest) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{8}
}

func (x *PushHyperloopHtlcSigRequest) GetHyperloopId() []byte {
	if x != nil {
		return x.HyperloopId
	}
	return nil
}

func (x *PushHyperloopHtlcSigRequest) GetSwapHash() []byte {
	if x != nil {
		return x.SwapHash
	}
	return nil
}

func (x *PushHyperloopHtlcSigRequest) GetHtlcSig() []byte {
	if x != nil {
		return x.HtlcSig
	}
	return nil
}

type PushHyperloopHtlcSigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushHyperloopHtlcSigResponse) Reset() {
	*x = PushHyperloopHtlcSigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopHtlcSigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopHtlcSigResponse) ProtoMessage() {}

func (x *PushHyperloopHtlcSigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopHtlcSigResponse.ProtoReflect.Descriptor instead.
func (*PushHyperloopHtlcSigResponse) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{9}
}

type PushHyperloopPreimageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HyperloopId []byte `protobuf:"bytes,1,opt,name=hyperloop_id,json=hyperloopId,proto3" json:"hyperloop_id,omitempty"`
	Preimage    []byte `protobuf:"bytes,2,opt,name=preimage,proto3" json:"preimage,omitempty"`
	SweepNonce  []byte `protobuf:"bytes,3,opt,name=sweep_nonce,json=sweepNonce,proto3" json:"sweep_nonce,omitempty"`
}

func (x *PushHyperloopPreimageRequest) Reset() {
	*x = PushHyperloopPreimageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopPreimageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopPreimageRequest) ProtoMessage() {}

func (x *PushHyperloopPreimageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopPreimageRequest.ProtoReflect.Descriptor instead.
func (*PushHyperloopPreimageRequest) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{10}
}

func (x *PushHyperloopPreimageRequest) GetHyperloopId() []byte {
	if x != nil {
		return x.HyperloopId
	}
	return nil
}

func (x *PushHyperloopPreimageRequest) GetPreimage() []byte {
	if x != nil {
		return x.Preimage
	}
	return nil
}

func (x *PushHyperloopPreimageRequest) GetSweepNonce() []byte {
	if x != nil {
		return x.SweepNonce
	}
	return nil
}

type PushHyperloopPreimageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerSweepNonce []byte `protobuf:"bytes,1,opt,name=server_sweep_nonce,json=serverSweepNonce,proto3" json:"server_sweep_nonce,omitempty"`
	SweepFeeRate     int64  `protobuf:"varint,2,opt,name=sweep_fee_rate,json=sweepFeeRate,proto3" json:"sweep_fee_rate,omitempty"`
}

func (x *PushHyperloopPreimageResponse) Reset() {
	*x = PushHyperloopPreimageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopPreimageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopPreimageResponse) ProtoMessage() {}

func (x *PushHyperloopPreimageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopPreimageResponse.ProtoReflect.Descriptor instead.
func (*PushHyperloopPreimageResponse) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{11}
}

func (x *PushHyperloopPreimageResponse) GetServerSweepNonce() []byte {
	if x != nil {
		return x.ServerSweepNonce
	}
	return nil
}

func (x *PushHyperloopPreimageResponse) GetSweepFeeRate() int64 {
	if x != nil {
		return x.SweepFeeRate
	}
	return 0
}

type PushHyperloopSweeplessSweepSigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HyperloopId []byte `protobuf:"bytes,1,opt,name=hyperloop_id,json=hyperloopId,proto3" json:"hyperloop_id,omitempty"`
	SwapHash    []byte `protobuf:"bytes,2,opt,name=swap_hash,json=swapHash,proto3" json:"swap_hash,omitempty"`
	SweepSig    []byte `protobuf:"bytes,3,opt,name=sweep_sig,json=sweepSig,proto3" json:"sweep_sig,omitempty"`
}

func (x *PushHyperloopSweeplessSweepSigRequest) Reset() {
	*x = PushHyperloopSweeplessSweepSigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopSweeplessSweepSigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopSweeplessSweepSigRequest) ProtoMessage() {}

func (x *PushHyperloopSweeplessSweepSigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopSweeplessSweepSigRequest.ProtoReflect.Descriptor instead.
func (*PushHyperloopSweeplessSweepSigRequest) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{12}
}

func (x *PushHyperloopSweeplessSweepSigRequest) GetHyperloopId() []byte {
	if x != nil {
		return x.HyperloopId
	}
	return nil
}

func (x *PushHyperloopSweeplessSweepSigRequest) GetSwapHash() []byte {
	if x != nil {
		return x.SwapHash
	}
	return nil
}

func (x *PushHyperloopSweeplessSweepSigRequest) GetSweepSig() []byte {
	if x != nil {
		return x.SweepSig
	}
	return nil
}

type PushHyperloopSweeplessSweepSigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushHyperloopSweeplessSweepSigResponse) Reset() {
	*x = PushHyperloopSweeplessSweepSigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperloop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHyperloopSweeplessSweepSigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHyperloopSweeplessSweepSigResponse) ProtoMessage() {}

func (x *PushHyperloopSweeplessSweepSigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyperloop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHyperloopSweeplessSweepSigResponse.ProtoReflect.Descriptor instead.
func (*PushHyperloopSweeplessSweepSigResponse) Descriptor() ([]byte, []int) {
	return file_hyperloop_proto_rawDescGZIP(), []int{13}
}

var File_hyperloop_proto protoreflect.FileDescriptor

var file_hyperloop_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x22, 0x47, 0x0a, 0x22, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x23, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x4c, 0x6f, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x74, 0x78, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f,
	0x70, 0x54, 0x78, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x74, 0x6c, 0x63, 0x5f, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x68, 0x74, 0x6c, 0x63,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x68, 0x74, 0x6c, 0x63, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x16,
	0x73, 0x77, 0x65, 0x65, 0x70, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x77,
	0x65, 0x65, 0x70, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x77, 0x65, 0x65, 0x70, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x77, 0x61, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x73, 0x77, 0x61, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6d, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x6d, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x77, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x77, 0x65, 0x65, 0x70, 0x41, 0x64, 0x64, 0x72, 0x22, 0x82, 0x02, 0x0a, 0x18, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77,
	0x61, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73,
	0x77, 0x61, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6d, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x6d, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x1e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x1b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x77, 0x65, 0x65, 0x70, 0x41, 0x64, 0x64, 0x72, 0x22,
	0xe8, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x68, 0x74, 0x6c, 0x63, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x74, 0x6c, 0x63, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x12, 0x29, 0x0a, 0x10, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x68,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x46, 0x65, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x7e, 0x0a, 0x1d, 0x50, 0x75,
	0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x74, 0x6c, 0x63, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x68, 0x74, 0x6c, 0x63, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x70, 0x0a, 0x1e, 0x50, 0x75,
	0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x68, 0x74, 0x6c, 0x63, 0x5f, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48,
	0x74, 0x6c, 0x63, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x74, 0x6c, 0x63,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x68, 0x74, 0x6c, 0x63, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x1b,
	0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c,
	0x63, 0x53, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x74, 0x6c, 0x63, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x68,
	0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x22, 0x1e, 0x0a, 0x1c, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x1c, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x6f, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x68, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x77, 0x65, 0x65,
	0x70, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x73, 0x0a, 0x1d, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x77, 0x65, 0x65, 0x70,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x77, 0x65, 0x65, 0x70, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x25,
	0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x53, 0x77, 0x65,
	0x65, 0x70, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x77, 0x65, 0x65, 0x70, 0x53, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x68, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x77, 0x61,
	0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f, 0x73,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x77, 0x65, 0x65, 0x70, 0x53,
	0x69, 0x67, 0x22, 0x28, 0x0a, 0x26, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x6f, 0x6f, 0x70, 0x53, 0x77, 0x65, 0x65, 0x70, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x77, 0x65, 0x65,
	0x70, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa5, 0x05, 0x0a,
	0x0f, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x7a, 0x0a, 0x1b, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x2b, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x6f, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x11,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f,
	0x70, 0x12, 0x21, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x50, 0x75, 0x73, 0x68,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x26, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x6f, 0x6f,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f,
	0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72,
	0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x15, 0x50, 0x75, 0x73, 0x68,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x25, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70,
	0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x81, 0x01, 0x0a, 0x1e, 0x50, 0x75, 0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f,
	0x6f, 0x70, 0x53, 0x77, 0x65, 0x65, 0x70, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x77, 0x65, 0x65, 0x70,
	0x53, 0x69, 0x67, 0x12, 0x2e, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x53, 0x77, 0x65, 0x65, 0x70,
	0x6c, 0x65, 0x73, 0x73, 0x53, 0x77, 0x65, 0x65, 0x70, 0x53, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x6f, 0x6f, 0x70, 0x53, 0x77, 0x65, 0x65, 0x70,
	0x6c, 0x65, 0x73, 0x73, 0x53, 0x77, 0x65, 0x65, 0x70, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x6c, 0x61, 0x62, 0x73,
	0x2f, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hyperloop_proto_rawDescOnce sync.Once
	file_hyperloop_proto_rawDescData = file_hyperloop_proto_rawDesc
)

func file_hyperloop_proto_rawDescGZIP() []byte {
	file_hyperloop_proto_rawDescOnce.Do(func() {
		file_hyperloop_proto_rawDescData = protoimpl.X.CompressGZIP(file_hyperloop_proto_rawDescData)
	})
	return file_hyperloop_proto_rawDescData
}

var file_hyperloop_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_hyperloop_proto_goTypes = []interface{}{
	(*HyperloopNotificationStreamRequest)(nil),     // 0: looprpc.HyperloopNotificationStreamRequest
	(*HyperloopNotificationStreamResponse)(nil),    // 1: looprpc.HyperloopNotificationStreamResponse
	(*HyperloopReadyForSig)(nil),                   // 2: looprpc.HyperloopReadyForSig
	(*HyperLoopParticipant)(nil),                   // 3: looprpc.HyperLoopParticipant
	(*RegisterHyperloopRequest)(nil),               // 4: looprpc.RegisterHyperloopRequest
	(*RegisterHyperloopResponse)(nil),              // 5: looprpc.RegisterHyperloopResponse
	(*PushHyperloopHtlcNonceRequest)(nil),          // 6: looprpc.PushHyperloopHtlcNonceRequest
	(*PushHyperloopHtlcNonceResponse)(nil),         // 7: looprpc.PushHyperloopHtlcNonceResponse
	(*PushHyperloopHtlcSigRequest)(nil),            // 8: looprpc.PushHyperloopHtlcSigRequest
	(*PushHyperloopHtlcSigResponse)(nil),           // 9: looprpc.PushHyperloopHtlcSigResponse
	(*PushHyperloopPreimageRequest)(nil),           // 10: looprpc.PushHyperloopPreimageRequest
	(*PushHyperloopPreimageResponse)(nil),          // 11: looprpc.PushHyperloopPreimageResponse
	(*PushHyperloopSweeplessSweepSigRequest)(nil),  // 12: looprpc.PushHyperloopSweeplessSweepSigRequest
	(*PushHyperloopSweeplessSweepSigResponse)(nil), // 13: looprpc.PushHyperloopSweeplessSweepSigResponse
}
var file_hyperloop_proto_depIdxs = []int32{
	3,  // 0: looprpc.HyperloopNotificationStreamResponse.participants:type_name -> looprpc.HyperLoopParticipant
	0,  // 1: looprpc.HyperloopServer.HyperloopNotificationStream:input_type -> looprpc.HyperloopNotificationStreamRequest
	4,  // 2: looprpc.HyperloopServer.RegisterHyperloop:input_type -> looprpc.RegisterHyperloopRequest
	6,  // 3: looprpc.HyperloopServer.PushHyperloopHtlcNonce:input_type -> looprpc.PushHyperloopHtlcNonceRequest
	8,  // 4: looprpc.HyperloopServer.PushHyperloopHtlcSig:input_type -> looprpc.PushHyperloopHtlcSigRequest
	10, // 5: looprpc.HyperloopServer.PushHyperloopPreimage:input_type -> looprpc.PushHyperloopPreimageRequest
	12, // 6: looprpc.HyperloopServer.PushHyperloopSweeplessSweepSig:input_type -> looprpc.PushHyperloopSweeplessSweepSigRequest
	1,  // 7: looprpc.HyperloopServer.HyperloopNotificationStream:output_type -> looprpc.HyperloopNotificationStreamResponse
	5,  // 8: looprpc.HyperloopServer.RegisterHyperloop:output_type -> looprpc.RegisterHyperloopResponse
	7,  // 9: looprpc.HyperloopServer.PushHyperloopHtlcNonce:output_type -> looprpc.PushHyperloopHtlcNonceResponse
	9,  // 10: looprpc.HyperloopServer.PushHyperloopHtlcSig:output_type -> looprpc.PushHyperloopHtlcSigResponse
	11, // 11: looprpc.HyperloopServer.PushHyperloopPreimage:output_type -> looprpc.PushHyperloopPreimageResponse
	13, // 12: looprpc.HyperloopServer.PushHyperloopSweeplessSweepSig:output_type -> looprpc.PushHyperloopSweeplessSweepSigResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_hyperloop_proto_init() }
func file_hyperloop_proto_init() {
	if File_hyperloop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hyperloop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperloopNotificationStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperloopNotificationStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperloopReadyForSig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperLoopParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterHyperloopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterHyperloopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopHtlcNonceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopHtlcNonceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopHtlcSigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopHtlcSigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopPreimageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopPreimageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopSweeplessSweepSigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperloop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHyperloopSweeplessSweepSigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hyperloop_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hyperloop_proto_goTypes,
		DependencyIndexes: file_hyperloop_proto_depIdxs,
		MessageInfos:      file_hyperloop_proto_msgTypes,
	}.Build()
	File_hyperloop_proto = out.File
	file_hyperloop_proto_rawDesc = nil
	file_hyperloop_proto_goTypes = nil
	file_hyperloop_proto_depIdxs = nil
}
